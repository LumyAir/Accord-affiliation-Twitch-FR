!function(e){var t={};function __webpack_require__(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,__webpack_require__),n.l=!0,n.exports}__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,s){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(__webpack_require__.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)__webpack_require__.d(s,n,function(t){return e[t]}.bind(null,n));return s},__webpack_require__.n=function(e){var t=e&&e.__esModule?function getDefault(){return e.default}:function getModuleExports(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="//cdn.frankerfacez.com/static/addons/",__webpack_require__(__webpack_require__.s=22)}({22:function(e,t,s){class SevenTVEmotes extends FrankerFaceZ.utilities.addon.Addon{constructor(...e){super(...e),this.inject("addons"),this.addonID=this.name.replace(/^addon\./,""),this.manifest=this.addons.getAddon(this.addonID)}async onLoad(){let e=await s(23);await this.populate(e)}onEnable(){for(let e of Object.values(this.children))e.enable()}}SevenTVEmotes.register("7tv-emotes")},23:function(e,t,s){var n={"./api.js":24,"./avatars.js":25,"./badges.js":26,"./emotes.js":27,"./eventapi.js":28,"./nametag-paints.js":29};function webpackContext(e){var t=webpackContextResolve(e);return s(t)}function webpackContextResolve(e){if(!s.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}webpackContext.keys=function webpackContextKeys(){return Object.keys(n)},webpackContext.resolve=webpackContextResolve,e.exports=webpackContext,webpackContext.id=23},24:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return API})),s.d(t,"Emotes",(function(){return Emotes})),s.d(t,"Cosmetics",(function(){return Cosmetics}));class API extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject(Emotes),this.inject(Cosmetics),this.apiBaseURI="https://api.7tv.app/v2",this.eventsBaseURI="https://events.7tv.app/v1",this.appBaseURI="https://7tv.app",this.clientPlatform="ffz",this.clientVersion=this.parent.manifest.version}makeRequest(e,t){const s=new Headers(t&&t.headers||{});return s.set("X-SevenTV-Platform",this.clientPlatform),s.set("X-SevenTV-Version",this.clientVersion),fetch(`${this.apiBaseURI}/${e}`,Object.assign({},t,{headers:s}))}async requestJSON(e,t){const s=await this.makeRequest(e,t);if(s.ok){return await s.json()}return null}async requestObject(e,t){const s=await this.requestJSON(e,t);return null!=s&&"object"==typeof s?s:{}}async requestArray(e,t){const s=await this.requestJSON(e,t);return s instanceof Array?s:[]}getEmotesEventSourceURL(e){let t=new URLSearchParams;return t.set("channel",e),t.set("agent",`${this.clientPlatform}:${this.clientVersion}`),`${this.eventsBaseURI}/channel-emotes?${t.toString()}`}getEmoteAppURL(e){return`${this.appBaseURI}/emotes/${e.id}`}}class Emotes extends FrankerFaceZ.utilities.module.Module{fetchGlobalEmotes(){return this.parent.requestArray("emotes/global")}fetchChannelEmotes(e){return this.parent.requestArray(`users/${e}/emotes`)}}class Cosmetics extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e)}fetchAvatars(){return this.parent.requestObject("cosmetics/avatars?map_to=login")}fetchCosmetics(){return this.parent.requestObject("cosmetics?user_identifier=twitch_id")}updateCosmetics(e=!1){return!this.cosmetics||e?(this.cosmeticsUpdate||(this.cosmeticsUpdate=this.fetchCosmetics().then(e=>(this.cosmetics=e,this.cosmeticsUpdate=void 0,!0))),this.cosmeticsUpdate):Promise.resolve(!1)}async getCosmeticsOfType(e){return await this.updateCosmetics(),this.cosmetics&&this.cosmetics[e]||[]}getBadges(){return this.getCosmeticsOfType("badges")}getPaints(){return this.getCosmeticsOfType("paints")}}},25:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return Avatars}));class Avatars extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("..api"),this.inject("settings"),this.inject("site"),this.inject("site.fine"),this.settings.add("addon.seventv_emotes.animated_avatars",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Animated Avatars",description:"Show 7TV animated avatars on users who have them set. [(7TV Subscriber Perk)](https://7tv.app/subscribe)",component:"setting-check-box"}}),this.userAvatars=new Map}async onEnable(){await this.findAvatarClass(),this.on("settings:changed:addon.seventv_emotes.animated_avatars",()=>this.updateAnimatedAvatars()),this.updateAnimatedAvatars()}async findAvatarClass(){if("main"!=this.root.flavor)return;let e=await this.site.awaitElement(".tw-avatar");if(e){let t=this.fine.getOwner(e);"ScAvatar"==t.type.displayName&&(this.AvatarClass=t.type)}}getUserAvatar(e){return this.userAvatars.get(e.toLowerCase())}async updateAnimatedAvatars(){if(this.userAvatars.clear(),this.settings.get("addon.seventv_emotes.animated_avatars")){const e=await this.api.cosmetics.fetchAvatars();for(const[t,s]of Object.entries(e))this.userAvatars.set(t,s)}this.updateAvatarRenderer()}updateAvatarRenderer(){if(this.AvatarClass)if(this.settings.get("addon.seventv_emotes.animated_avatars")){let e=this.AvatarClass.SEVENTV_oldRenderer||this.AvatarClass.render;this.AvatarClass.render=(t,...s)=>{for(let e of t.children){var n;"ImageAvatar"==(null==e||null===(n=e.type)||void 0===n?void 0:n.displayName)&&this.patchImageAvatar(e)}return e(t,...s)},this.AvatarClass.SEVENTV_oldRenderer=e,this.rerenderAvatars()}else this.AvatarClass.SEVENTV_oldRenderer&&(this.rerenderAvatars(),this.AvatarClass.render=this.AvatarClass.SEVENTV_oldRenderer,delete this.AvatarClass.SEVENTV_oldRenderer)}patchImageAvatar(e){let t=e.props;if(t.userLogin&&"profile-image"!=t["data-a-target"]){let e=this.getUserAvatar(t.userLogin);e?(t.SEVENTV_oldSrc=t.SEVENTV_oldSrc||t.src,t.src=e):t.SEVENTV_oldSrc&&(t.src=t.SEVENTV_oldSrc,delete t.SEVENTV_oldSrc)}}rerenderAvatars(){let e=document.querySelectorAll(".tw-avatar"),t=new Set,s=new Map;for(let n of e){let e=this.fine.getOwner(n);for(;e;){if(s.has(e)||(s.set(e,e.key),e.key="SEVENTV_rerender"),e.stateNode&&e.stateNode.forceUpdate){t.add(e.stateNode);break}e=e.return}}for(let e of t)e.forceUpdate(),e.forceUpdate();for(const[e,t]of s)e.key=t}}},26:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return Badges}));class Badges extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("..api"),this.inject("settings"),this.inject("chat.badges"),this.settings.add("addon.seventv_emotes.badges",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Badges",description:"Show 7TV user badges. (Per-badge visibilty can be set in [Chat >> Badges > Visibilty > Add-Ons](~chat.badges))",component:"setting-check-box"}}),this.bulkBadgeIDs=new Set}onEnable(){this.on("settings:changed:addon.seventv_emotes.badges",()=>this.updateBadges()),this.updateBadges()}async updateBadges(){if(this.removeBadges(),this.settings.get("addon.seventv_emotes.badges")){const e=await this.api.cosmetics.getBadges();for(const t of e){const e="addon.seventv_emotes.badge-"+t.id;this.badges.loadBadgeData(e,{id:t.id,title:t.tooltip,slot:69,image:t.urls[0][1],urls:{1:t.urls[0][1],2:t.urls[1][1],4:t.urls[2][1]},svg:!1}),this.badges.setBulk("addon.seventv_emotes",e,t.users),this.bulkBadgeIDs.add(e)}}this.emit("chat:update-line-badges")}removeBadges(){for(let e of this.bulkBadgeIDs)this.badges.deleteBulk("addon.seventv_emotes",e),delete this.badges.badges[e];this.badges.buildBadgeCSS(),this.bulkBadgeIDs.clear()}}},27:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return Emotes}));class Emotes extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("..api"),this.inject("settings"),this.inject("chat"),this.inject("chat.emotes"),this.setIcon=this.parent.manifest.icon,this.settings.add("addon.seventv_emotes.global_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Global Emotes",description:"Enables global emotes from 7TV.",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.channel_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes",title:"Channel Emotes",description:"Enables channel specific emotes from 7TV.",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.unlisted_emotes",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes > Emote Visibility",title:"Show unlisted emotes",description:"Show emotes which have been deemed non-TOS friendly by 7TV moderators.",component:"setting-check-box"}})}onEnable(){this.on("settings:changed:addon.seventv_emotes.global_emotes",()=>this.updateGlobalEmotes()),this.on("settings:changed:addon.seventv_emotes.channel_emotes",()=>this.updateChannelSets()),this.on("settings:changed:addon.seventv_emotes.unlisted_emotes",()=>this.updateChannelSets()),this.on("chat:room-add",e=>this.updateChannelSet(e)),this.on("chat:room-remove",e=>this.setChannelSet(e,null)),this.updateGlobalEmotes(),this.updateChannelSets()}async updateGlobalEmotes(){if(this.emotes.removeDefaultSet("addon.seventv_emotes","addon.seventv_emotes.global"),this.emotes.unloadSet("addon.seventv_emotes.global"),!this.settings.get("addon.seventv_emotes.global_emotes"))return;const e=await this.api.emotes.fetchGlobalEmotes(),t=[];for(const s of e)t.push(this.convertEmote(s));this.emotes.addDefaultSet("addon.seventv_emotes","addon.seventv_emotes.global",{title:"Global Emotes",source:"7TV",icon:this.setIcon,emotes:t})}getChannelSetID(e){return"addon.seventv_emotes.channel-"+e.id}getChannelSet(e){return this.emotes.emote_sets[this.getChannelSetID(e)]}setChannelSet(e,t){const s=this.getChannelSetID(e);e.removeSet("addon.seventv_emotes",s),this.emotes.unloadSet(s),t&&t.length>0&&e.addSet("addon.seventv_emotes",s,{title:"Channel Emotes",source:"7TV",icon:this.setIcon,emotes:t})}addEmoteToChannelSet(e,t,s=!1){const n=this.getChannelSet(e),a=this.settings.get("addon.seventv_emotes.unlisted_emotes");if(n&&(a||s||!this.isEmoteUnlisted(t))){const s=n.emotes||{};return s[t.id]=this.convertEmote(t),this.setChannelSet(e,Object.values(s)),!0}return!1}removeEmoteFromChannelSet(e,t){const s=this.getChannelSet(e);if(s){const n=s.emotes||{};return delete n[t],this.setChannelSet(e,Object.values(n)),!0}return!1}getEmoteFromChannelSet(e,t){const s=this.getChannelSet(e);if(s&&s.emotes){let e=s.emotes[t];if(e&&e.SEVENTV_emote)return e.SEVENTV_emote}return null}async updateChannelSet(e){if(this.settings.get("addon.seventv_emotes.channel_emotes")){let t=await this.api.emotes.fetchChannelEmotes(e.id);const s=this.settings.get("addon.seventv_emotes.unlisted_emotes");let n=[];for(let e of t)!s&&this.isEmoteUnlisted(e)||n.push(this.convertEmote(e));return this.setChannelSet(e,n),!0}return this.setChannelSet(e,null),!1}async updateChannelSets(){for(const e of this.chat.iterateRooms())await this.updateChannelSet(e)}getBitFlag(e,t){return(e&t)==t}convertEmote(e){return{id:e.id,name:e.name,owner:{display_name:e.owner.display_name,name:e.owner.login},urls:{1:e.urls[0][1],2:e.urls[1][1],3:e.urls[2][1],4:e.urls[3][1]},modifier:this.getBitFlag(e.visibility,128),modifier_offset:"0",width:e.width[0],height:e.height[0],click_url:this.api.getEmoteAppURL(e),SEVENTV_emote:e}}isEmoteUnlisted(e){const t=this.getBitFlag(e.visibility,4),s=this.getBitFlag(e.visibility,256);return t||s}}},28:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return EventAPI}));class EventAPI extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("..api"),this.inject("..emotes"),this.inject("settings"),this.inject("chat"),this.injectAs("siteChat","site.chat"),this.settings.add("addon.seventv_emotes.emote_updates",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes > Live Emote Updates",title:"Enable emote updates",description:"Enables live updates when a 7TV emote is added or removed in the current channel.",component:"setting-check-box"}}),this.settings.add("addon.seventv_emotes.update_messages",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> Emotes > Live Emote Updates",title:"Show update messages",description:"Show messages in chat when emotes are updated in the current channel.",component:"setting-check-box"}})}onEnable(){this.on("settings:changed:addon.seventv_emotes.channel_emotes",()=>this.updateEventSource()),this.on("settings:changed:addon.seventv_emotes.emote_updates",()=>this.updateEventSource()),this.on("chat:room-add",()=>this.updateEventSource()),this.on("chat:room-remove",()=>this.updateEventSource()),this.updateEventSource()}updateEventSource(){if(this.closeEventSource(),this.settings.get("addon.seventv_emotes.emote_updates")&&this.settings.get("addon.seventv_emotes.channel_emotes")){const e=[];for(let t of this.chat.iterateRooms())e.push(t.login);e.length>0&&(this.eventSource=new EventSource(this.api.getEmotesEventSourceURL(e)),this.eventSource.addEventListener("open",()=>this.eventSourceReconnectDelay=void 0),this.eventSource.addEventListener("update",e=>this.handleChannelEmoteUpdate(e)),this.eventSource.addEventListener("error",()=>{this.eventSource.readyState==EventSource.CLOSED&&(this.closeEventSource(),this.eventSourceReconnectDelay||(this.eventSourceReconnectDelay=5e3),this.eventSourceReconnectTimeout=setTimeout(()=>{this.eventSourceReconnectTimeout=void 0,this.updateEventSource()},this.eventSourceReconnectDelay),this.eventSourceReconnectDelay*=2+.2*Math.random())}))}}closeEventSource(){this.eventSource&&this.eventSource.close(),this.eventSourceReconnectTimeout&&clearTimeout(this.eventSourceReconnectTimeout),this.eventSource=null,this.eventSourceReconnectTimeout=void 0}handleChannelEmoteUpdate(e){if(!this.settings.get("addon.seventv_emotes.channel_emotes"))return;let t,s=JSON.parse(e.data);for(const e of this.chat.iterateRooms())if(e.login==s.channel){t=e;break}if(t){const e=this.emotes.getEmoteFromChannelSet(t,s.emote_id);let n=!1;switch(s.action){case"UPDATE":if(!e)break;case"ADD":n=this.emotes.addEmoteToChannelSet(t,Object.assign({},s.emote,{id:s.emote_id,name:s.name}));break;case"REMOVE":n=this.emotes.removeEmoteFromChannelSet(t,s.emote_id)}if(n&&this.settings.get("addon.seventv_emotes.update_messages")){let n=`[7TV] ${s.actor} `;switch(s.action){case"ADD":n+=`added the emote '${s.name}'`;break;case"REMOVE":n+=`removed the emote '${s.name}'`;break;case"UPDATE":e&&e.name!=s.name?n+=`renamed the emote '${e.name}' to '${s.name}'`:n+=`updated the emote '${s.name}'`}this.siteChat.addNotice(t.login,n)}}}}},29:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return NametagPaints}));class NametagPaints extends FrankerFaceZ.utilities.module.Module{constructor(...e){super(...e),this.inject("..api"),this.inject("settings"),this.inject("site.fine"),this.settings.add("addon.seventv_emotes.nametag_paints",{default:!0,ui:{path:"Add-Ons > 7TV Emotes >> User Cosmetics",title:"Nametag Paints",description:"Show 7TV username gradients and images on users who have them set. [(7TV Subscriber Perk)](https://7tv.app/subscribe)",component:"setting-check-box"}}),this.userPaints=new Map}async onEnable(){this.on("settings:changed:addon.seventv_emotes.nametag_paints",()=>this.updatePaints()),this.updatePaints()}getUserPaint(e){return this.userPaints.get(e)}async updatePaints(){if(this.userPaints.clear(),this.removeStyleSheet(),this.settings.get("addon.seventv_emotes.nametag_paints")){const e=await this.api.cosmetics.getPaints(),t=[];for(let s of e){t.push(this.buildPaintCSS(s));for(let e of s.users)this.userPaints.set(e,s.id)}this.appendStyleSheet(t.join(" "))}this.updateChatLines()}buildPaintCSS(e){let t,s=[],n=!0;switch(e.function){case"linear-gradient":t=(e.repeat?"repeating-":"")+"linear-gradient","number"==typeof e.angle?s.push(e.angle+"deg"):s.push("90deg");break;case"radial-gradient":t=(e.repeat?"repeating-":"")+"radial-gradient","ellipse"==e.shape?s.push("ellipse"):s.push("circle");break;case"url":t="url","string"==typeof e.image_url?s.push(`"${CSS.escape(e.image_url)}"`):s.push('""'),n=!1;break;default:return null}if(n&&e.stops instanceof Array)for(let t of e.stops)"number"==typeof t.color&&"number"==typeof t.at&&s.push(`${this.getCSSColorFromInt(t.color)} ${100*t.at}%`);let a,i,o=`${t}(${s.join(", ")})`;if("number"==typeof e.color&&(a=this.getCSSColorFromInt(e.color)),e.drop_shadows instanceof Array){let t=[];for(let s of e.drop_shadows)"number"==typeof s.x_offset&&"number"==typeof s.y_offset&&"number"==typeof s.radius&&"number"==typeof s.color&&t.push(`drop-shadow(${s.x_offset}px ${s.y_offset}px ${s.radius}px ${this.getCSSColorFromInt(s.color)})`);i=t.join(" ")}return`\n\t\t\t[data-seventv-paint="${e.id}"]:not(.seventv-paint--default-only) span {\n\t\t\t\tbackground-image: ${o};\n\t\t\t\tbackground-size: cover;\n\t\t\t\tbackground-clip: text;\n\t\t\t\t-webkit-background-clip: text;\n\t\t\t\t-webkit-text-fill-color: transparent;\n\t\t\t\tbackground-color: currentColor;\n\t\t\t\t${i?`filter: ${i};`:""}\n\t\t\t}\n\n\t\t\t${a?`[data-seventv-paint="${e.id}"] {\n\t\t\t\tcolor: ${a} !important;\n\t\t\t}`:""}\n\t\t`.replace(/[\n\t]/g,"")}appendStyleSheet(e){this.removeStyleSheet(),this.stylesheet=document.createElement("style"),this.stylesheet.id=this.path+"--styles",this.stylesheet.textContent=e,document.head.appendChild(this.stylesheet)}removeStyleSheet(){this.stylesheet&&(this.stylesheet.remove(),this.stylesheet=void 0)}getCSSColorFromInt(e){return`rgba(${e>>>24&255}, ${e>>>16&255}, ${e>>>8&255}, ${(255&e)/255})`}updateChatLines(){let e=this.settings.get("addon.seventv_emotes.nametag_paints"),t=[];if("main"==this.root.flavor){const e=this.resolve("site.chat.chat_line");t.push(e.ChatLine);const s=this.resolve("site.video_chat");t.push(s.VideoChatLine)}else if("clips"==this.root.flavor){const e=this.resolve("site.chat.line");t.push(e.ChatLine)}for(let s of t)s.off("mount",this.updateChatLine),s.off("update",this.updateChatLine),e&&(s.on("mount",this.updateChatLine,this),s.on("update",this.updateChatLine,this)),s.each(t=>this.updateChatLine(t,e))}updateChatLine(e,t){var s,n,a,i,o,r,d,c,h;t=t||this.settings.get("addon.seventv_emotes.nametag_paints");const l=(null===(s=e.props)||void 0===s||null===(n=s.message)||void 0===n||null===(a=n.user)||void 0===a?void 0:a.id)||(null===(i=e.props)||void 0===i||null===(o=i.messageContext)||void 0===o||null===(r=o.author)||void 0===r?void 0:r.id)||(null===(d=e.props)||void 0===d||null===(c=d.node)||void 0===c||null===(h=c.commenter)||void 0===h?void 0:h.id),u=this.fine.getChildNode(e),m=u.querySelector(".chat-line__username, .video-chat__message-author, .clip-chat__message-author"),p=u.querySelector(".message");if(m&&m.removeAttribute("data-seventv-paint"),p&&(p.removeAttribute("data-seventv-paint"),p.classList.remove("seventv-paint--default-only")),t){const e=this.getUserPaint(l);e&&(m&&m.setAttribute("data-seventv-paint",e),p&&p.style.color&&(p.setAttribute("data-seventv-paint",e),p.classList.add("seventv-paint--default-only")))}}}}});
//# sourceMappingURL=script.aa32e2b26e42c0045038.js.map